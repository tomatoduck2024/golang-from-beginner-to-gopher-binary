"use strict";(self.webpackChunkgolang_from_beginner_to_gopher=self.webpackChunkgolang_from_beginner_to_gopher||[]).push([[3613],{168:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>j,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"sql/join","title":"join","description":"Two tables:","source":"@site/docs/database/sql/join.md","sourceDirName":"sql","slug":"/sql/join","permalink":"/golang-from-beginner-to-gopher-binary/docs/database/sql/join","draft":false,"unlisted":false,"editUrl":"https://github.com/tomatoduck2024/golang-from-beginner-to-gopher/tree/main/docs/database/sql/join.md","tags":[],"version":"current","frontMatter":{},"sidebar":"dbSidebar","previous":{"title":"PostgreSQL","permalink":"/golang-from-beginner-to-gopher-binary/docs/database/postgres"}}');var r=t(4848),i=t(8453);const l={},d=void 0,h={},c=[{value:"1. INNER JOIN",id:"1-inner-join",level:2},{value:"2. LEFT (OUTER) JOIN",id:"2-left-outer-join",level:2},{value:"3. RIGHT (OUTER) JOIN",id:"3-right-outer-join",level:2},{value:"4. FULL (OUTER) JOIN",id:"4-full-outer-join",level:2},{value:"5. CROSS JOIN",id:"5-cross-join",level:2},{value:"6. NATURAL JOIN",id:"6-natural-join",level:2},{value:"7. SELF JOIN",id:"7-self-join",level:2},{value:"Quick Reference",id:"quick-reference",level:3}];function x(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Two tables:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Employees"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"right"},children:"emp_id"}),(0,r.jsx)(n.th,{children:"name"}),(0,r.jsx)(n.th,{style:{textAlign:"right"},children:"dept_id"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"1"}),(0,r.jsx)(n.td,{children:"Alice"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"10"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"2"}),(0,r.jsx)(n.td,{children:"Bob"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"20"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"3"}),(0,r.jsx)(n.td,{children:"Charlie"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"NULL"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"4"}),(0,r.jsx)(n.td,{children:"Diana"}),(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"30"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Departments"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"right"},children:"dept_id"}),(0,r.jsx)(n.th,{children:"dept_name"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"10"}),(0,r.jsx)(n.td,{children:"HR"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"20"}),(0,r.jsx)(n.td,{children:"Engineering"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"30"}),(0,r.jsx)(n.td,{children:"Marketing"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"40"}),(0,r.jsx)(n.td,{children:"Sales"})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1-inner-join",children:"1. INNER JOIN"}),"\n",(0,r.jsxs)(n.p,{children:["Returns only rows where there is a match in ",(0,r.jsx)(n.strong,{children:"both"})," tables."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT e.emp_id, e.name, d.dept_name\nFROM Employees e\nINNER JOIN Departments d\n  ON e.dept_id = d.dept_id;\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Result"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"right"},children:"emp_id"}),(0,r.jsx)(n.th,{children:"name"}),(0,r.jsx)(n.th,{children:"dept_name"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"1"}),(0,r.jsx)(n.td,{children:"Alice"}),(0,r.jsx)(n.td,{children:"HR"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"2"}),(0,r.jsx)(n.td,{children:"Bob"}),(0,r.jsx)(n.td,{children:"Engineering"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"4"}),(0,r.jsx)(n.td,{children:"Diana"}),(0,r.jsx)(n.td,{children:"Marketing"})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"2-left-outer-join",children:"2. LEFT (OUTER) JOIN"}),"\n",(0,r.jsxs)(n.p,{children:["Returns ",(0,r.jsx)(n.strong,{children:"all"})," rows from the ",(0,r.jsx)(n.strong,{children:"left"})," table, plus matching rows from the right; non-matches from the right become NULL."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT e.emp_id, e.name, d.dept_name\nFROM Employees e\nLEFT JOIN Departments d\n  ON e.dept_id = d.dept_id;\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Result"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"right"},children:"emp_id"}),(0,r.jsx)(n.th,{children:"name"}),(0,r.jsx)(n.th,{children:"dept_name"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"1"}),(0,r.jsx)(n.td,{children:"Alice"}),(0,r.jsx)(n.td,{children:"HR"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"2"}),(0,r.jsx)(n.td,{children:"Bob"}),(0,r.jsx)(n.td,{children:"Engineering"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"3"}),(0,r.jsx)(n.td,{children:"Charlie"}),(0,r.jsx)(n.td,{children:"NULL"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"4"}),(0,r.jsx)(n.td,{children:"Diana"}),(0,r.jsx)(n.td,{children:"Marketing"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"(Charlie has no dept_id match, so dept_name is NULL.)"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"3-right-outer-join",children:"3. RIGHT (OUTER) JOIN"}),"\n",(0,r.jsxs)(n.p,{children:["Symmetric to LEFT JOIN: all rows from the ",(0,r.jsx)(n.strong,{children:"right"})," table, plus matches from the left; non-matches from the left become NULL."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT e.emp_id, e.name, d.dept_name\nFROM Employees e\nRIGHT JOIN Departments d\n  ON e.dept_id = d.dept_id;\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Result"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"right"},children:"emp_id"}),(0,r.jsx)(n.th,{children:"name"}),(0,r.jsx)(n.th,{children:"dept_name"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"1"}),(0,r.jsx)(n.td,{children:"Alice"}),(0,r.jsx)(n.td,{children:"HR"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"2"}),(0,r.jsx)(n.td,{children:"Bob"}),(0,r.jsx)(n.td,{children:"Engineering"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"4"}),(0,r.jsx)(n.td,{children:"Diana"}),(0,r.jsx)(n.td,{children:"Marketing"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"NULL"}),(0,r.jsx)(n.td,{children:"NULL"}),(0,r.jsx)(n.td,{children:"Sales"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"(Sales has no employees, so emp_id/name are NULL.)"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"4-full-outer-join",children:"4. FULL (OUTER) JOIN"}),"\n",(0,r.jsxs)(n.p,{children:["Returns ",(0,r.jsx)(n.strong,{children:"all"})," rows from ",(0,r.jsx)(n.strong,{children:"both"})," tables; non-matches on either side become NULL."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT e.emp_id, e.name, d.dept_name\nFROM Employees e\nFULL OUTER JOIN Departments d\n  ON e.dept_id = d.dept_id;\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Result"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"right"},children:"emp_id"}),(0,r.jsx)(n.th,{children:"name"}),(0,r.jsx)(n.th,{children:"dept_name"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"1"}),(0,r.jsx)(n.td,{children:"Alice"}),(0,r.jsx)(n.td,{children:"HR"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"2"}),(0,r.jsx)(n.td,{children:"Bob"}),(0,r.jsx)(n.td,{children:"Engineering"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"3"}),(0,r.jsx)(n.td,{children:"Charlie"}),(0,r.jsx)(n.td,{children:"NULL"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"4"}),(0,r.jsx)(n.td,{children:"Diana"}),(0,r.jsx)(n.td,{children:"Marketing"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"right"},children:"NULL"}),(0,r.jsx)(n.td,{children:"NULL"}),(0,r.jsx)(n.td,{children:"Sales"})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"5-cross-join",children:"5. CROSS JOIN"}),"\n",(0,r.jsxs)(n.p,{children:["Returns the ",(0,r.jsx)(n.strong,{children:"Cartesian product"})," of both tables (every employee matched with every department)."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT e.name, d.dept_name\nFROM Employees e\nCROSS JOIN Departments d;\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If Employees has 4 rows and Departments has 4, result has 16 rows."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"6-natural-join",children:"6. NATURAL JOIN"}),"\n",(0,r.jsx)(n.p,{children:"Automatically joins on all columns with the same name. (Use with caution\u2014be explicit if you need control.)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT *\nFROM Employees\nNATURAL JOIN Departments;\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This is roughly equivalent to ",(0,r.jsx)(n.code,{children:"INNER JOIN \u2026 ON Employees.dept_id = Departments.dept_id"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"7-self-join",children:"7. SELF JOIN"}),"\n",(0,r.jsx)(n.p,{children:"You can join a table to itself, e.g. to compare employees:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT e1.name AS emp, e2.name AS mentor\nFROM Employees e1\nLEFT JOIN Employees e2\n  ON e1.mentor_id = e2.emp_id;\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"(Assuming Employees has a mentor_id column.)"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"quick-reference",children:"Quick Reference"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Join Type"}),(0,r.jsx)(n.th,{children:"Keeps all rows from\u2026"}),(0,r.jsx)(n.th,{children:"Keeps unmatched as NULL"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"INNER JOIN"}),(0,r.jsx)(n.td,{children:"only matching ones"}),(0,r.jsx)(n.td,{children:"\u2014"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"LEFT (OUTER) JOIN"}),(0,r.jsx)(n.td,{children:"left table"}),(0,r.jsx)(n.td,{children:"right-side columns"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"RIGHT (OUTER) JOIN"}),(0,r.jsx)(n.td,{children:"right table"}),(0,r.jsx)(n.td,{children:"left-side columns"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"FULL (OUTER) JOIN"}),(0,r.jsx)(n.td,{children:"both tables"}),(0,r.jsx)(n.td,{children:"both sides (where no match)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CROSS JOIN"}),(0,r.jsx)(n.td,{children:"N/A (Cartesian product)"}),(0,r.jsx)(n.td,{children:"N/A"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"NATURAL JOIN"}),(0,r.jsx)(n.td,{children:"only matching ones"}),(0,r.jsx)(n.td,{children:"\u2014 (implicit INNER JOIN on same-named columns)"})]})]})]}),"\n",(0,r.jsx)(n.hr,{})]})}function j(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>d});var s=t(6540);const r={},i=s.createContext(r);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);